 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 107
    4                      ; Text size: 3500
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
   10  00002000          	.align 2
   11  00002000          	LC0_LF0:
   12  00002000  53657474	.ascii "Setting number = %d\n\000"
   12  00002004  696e6720	
   12  00002008  6e756d62	
   12  0000200c  6572203d	
   12  00002010  2025640a	
   12  00002014  00      	
   13  00002015          	.align 2
   14  00002018          	LC1_LF0:
   15  00002018  75736572	.ascii "userprog.dlx.obj\000"
   15  0000201c  70726f67	
   15  00002020  2e646c78	
   15  00002024  2e6f626a	
   15  00002028  00      	
   16  00002029          	.align 2
   17  0000202c          	LC2_LF0:
   18  0000202c  25632564	.ascii "%c%d\n\000"
   18  00002030  0a00    	
   19  00002032          	.align 2
   20  00002034          	LC3_LF0:
   21  00002034  55736167	.ascii "Usage: \000"
   21  00002038  653a2000	
   22  0000203c          	.align 2
   23  0000203c          	LC4_LF0:
   24  0000203c  206e756d	.ascii " number\n\000"
   24  00002040  6265720a	
   24  00002044  00      	
   25  00002045          	.align 2
   26  00002048          	LC5_LF0:
   27  00002048  61726763	.ascii "argc = %d\n\000"
   27  0000204c  203d2025	
   27  00002050  640a00  	
   28  00002053          	.align 2
   29  00002054          	LC6_LF0:
   30  00002054  546f7461	.ascii "Total time ran was %d\n\000"
   30  00002058  6c207469	
   30  0000205c  6d652072	
   30  00002060  616e2077	
   30  00002064  61732025	
   30  00002068  640a00  	
   31  0000206b          	.text
   32  00001000          	.align 2
   33  00001000          	.proc _main
   34  00001000          	.global _main
   35  00001000          	_main:
   36                      ;  Function 'main'; 32 bytes of locals, 0 regs to save.
   37  00001000  afbefffc	sw	-4(r29),r30; push fp
   38  00001004  001df020	add	r30,r0,r29; fp = sp
   39  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   40  0000100c  2fbd0028	subui	r29,r29,#40; alloc local storage
   41  00001010  8fc20000	lw	r2,(r30)
   42  00001014  8fc30004	lw	r3,4(r30)
   43  00001018  0c000d88	jal	___main
   44  0000101c  54000000	nop; not filled.
   45  00001020  0c000360	jal	_TimerGet
   46  00001024  54000000	nop; not filled.
   47  00001028  00013020	add	r6,r0,r1
   48  0000102c  60410002	seqi	r1,r2,#2
   49  00001030  14200018	bnez	r1,L3_LF0
   50  00001034  54000000	nop; not filled.
   51  00001038  60410003	seqi	r1,r2,#3
   52  0000103c  102001b8	beqz	r1,L20_LF0
   53  00001040  54000000	nop; not filled.
   54  00001044  080000e4	j	L9_LF0
   55  00001048  54000000	nop; not filled.
   56  0000104c          	L3_LF0:
   57  0000104c  23bdfff0	addi	r29,r29,#-16
   58  00001050  8c630004	lw	r3,4(r3)
   59  00001054  afa30000	sw	(r29),r3
   60  00001058  20070000	addi	r7,r0,#0
   61  0000105c  afa70004	sw	4(r29),r7
   62  00001060  2007000a	addi	r7,r0,#10
   63  00001064  afa70008	sw	8(r29),r7
   64  00001068  0c000a4c	jal	_dstrtol
   65  0000106c  54000000	nop; not filled.
   66  00001070  00012820	add	r5,r0,r1
   67  00001074  3c070000	lhi	r7,((LC0_LF0)>>16)&0xffff
   68  00001078  24e72000	addui	r7,r7,(LC0_LF0)&0xffff
   69  0000107c  afa70000	sw	(r29),r7
   70  00001080  afa50004	sw	4(r29),r5
   71  00001084  0c000248	jal	_Printf
   72  00001088  54000000	nop; not filled.
   73  0000108c  20070001	addi	r7,r0,#1
   74  00001090  afa70000	sw	(r29),r7
   75  00001094  0c000274	jal	_sem_create
   76  00001098  54000000	nop; not filled.
   77  0000109c  afa10000	sw	(r29),r1
   78  000010a0  23c4ffd8	addi	r4,r30,#-40
   79  000010a4  afa40004	sw	4(r29),r4
   80  000010a8  0c000900	jal	_ditoa
   81  000010ac  54000000	nop; not filled.
   82  000010b0  20030000	addi	r3,r0,#0
   83  000010b4  23bd0010	addi	r29,r29,#16
   84  000010b8  0065082a	slt	r1,r3,r5
   85  000010bc  10200194	beqz	r1,L2_LF0
   86  000010c0  54000000	nop; not filled.
   87  000010c4  23c2ffe8	addi	r2,r30,#-24
   88  000010c8          	L7_LF0:
   89  000010c8  23bdfff8	addi	r29,r29,#-8
   90  000010cc  afa30000	sw	(r29),r3
   91  000010d0  afa20004	sw	4(r29),r2
   92  000010d4  0c0008d4	jal	_ditoa
   93  000010d8  54000000	nop; not filled.
   94  000010dc  23bdfff0	addi	r29,r29,#-16
   95  000010e0  afa30000	sw	(r29),r3
   96  000010e4  20070000	addi	r7,r0,#0
   97  000010e8  afa70004	sw	4(r29),r7
   98  000010ec  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
   99  000010f0  24e72018	addui	r7,r7,(LC1_LF0)&0xffff
  100  000010f4  afa70008	sw	8(r29),r7
  101  000010f8  afa4000c	sw	12(r29),r4
  102  000010fc  afa20010	sw	16(r29),r2
  103  00001100  20070000	addi	r7,r0,#0
  104  00001104  afa70014	sw	20(r29),r7
  105  00001108  0c0001dc	jal	_process_create
  106  0000110c  54000000	nop; not filled.
  107  00001110  23bd0018	addi	r29,r29,#24
  108  00001114  20630001	addi	r3,r3,#1
  109  00001118  0065082a	slt	r1,r3,r5
  110  0000111c  10200134	beqz	r1,L2_LF0
  111  00001120  54000000	nop; not filled.
  112  00001124  0bffffa0	j	L7_LF0
  113  00001128  54000000	nop; not filled.
  114  0000112c          	L9_LF0:
  115  0000112c  23bdfff0	addi	r29,r29,#-16
  116  00001130  8c670004	lw	r7,4(r3)
  117  00001134  afa70000	sw	(r29),r7
  118  00001138  20070000	addi	r7,r0,#0
  119  0000113c  afa70004	sw	4(r29),r7
  120  00001140  2007000a	addi	r7,r0,#10
  121  00001144  afa70008	sw	8(r29),r7
  122  00001148  0c00096c	jal	_dstrtol
  123  0000114c  54000000	nop; not filled.
  124  00001150  00011020	add	r2,r0,r1
  125  00001154  8c630008	lw	r3,8(r3)
  126  00001158  afa30000	sw	(r29),r3
  127  0000115c  20070000	addi	r7,r0,#0
  128  00001160  afa70004	sw	4(r29),r7
  129  00001164  2007000a	addi	r7,r0,#10
  130  00001168  afa70008	sw	8(r29),r7
  131  0000116c  0c000948	jal	_dstrtol
  132  00001170  54000000	nop; not filled.
  133  00001174  00012020	add	r4,r0,r1
  134  00001178  20030000	addi	r3,r0,#0
  135  0000117c  23bd0010	addi	r29,r29,#16
  136  00001180  2405c34f	addui	r5,r0,#49999
  137  00001184  20420041	addi	r2,r2,#65
  138  00001188          	L13_LF0:
  139  00001188  23bdfff8	addi	r29,r29,#-8
  140  0000118c  afa40000	sw	(r29),r4
  141  00001190  0c000184	jal	_sem_wait
  142  00001194  54000000	nop; not filled.
  143  00001198  201f0000	addi	r31,r0,#0
  144  0000119c  23bd0008	addi	r29,r29,#8
  145  000011a0          	L16_LF0:
  146  000011a0  23ff0001	addi	r31,r31,#1
  147  000011a4  03e5082c	sle	r1,r31,r5
  148  000011a8  1420fff4	bnez	r1,L16_LF0
  149  000011ac  54000000	nop; not filled.
  150  000011b0  23bdfff0	addi	r29,r29,#-16
  151  000011b4  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  152  000011b8  24e7202c	addui	r7,r7,(LC2_LF0)&0xffff
  153  000011bc  afa70000	sw	(r29),r7
  154  000011c0  afa20004	sw	4(r29),r2
  155  000011c4  afa30008	sw	8(r29),r3
  156  000011c8  0c000104	jal	_Printf
  157  000011cc  54000000	nop; not filled.
  158  000011d0  afa40000	sw	(r29),r4
  159  000011d4  0c00014c	jal	_sem_signal
  160  000011d8  54000000	nop; not filled.
  161  000011dc  23bd0010	addi	r29,r29,#16
  162  000011e0  20630001	addi	r3,r3,#1
  163  000011e4  70610063	slei	r1,r3,#99
  164  000011e8  10200068	beqz	r1,L2_LF0
  165  000011ec  54000000	nop; not filled.
  166  000011f0  0bffff94	j	L13_LF0
  167  000011f4  54000000	nop; not filled.
  168  000011f8          	L20_LF0:
  169  000011f8  23bdfff8	addi	r29,r29,#-8
  170  000011fc  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  171  00001200  24e72034	addui	r7,r7,(LC3_LF0)&0xffff
  172  00001204  afa70000	sw	(r29),r7
  173  00001208  0c0000c4	jal	_Printf
  174  0000120c  54000000	nop; not filled.
  175  00001210  8c630000	lw	r3,(r3)
  176  00001214  afa30000	sw	(r29),r3
  177  00001218  0c0000b4	jal	_Printf
  178  0000121c  54000000	nop; not filled.
  179  00001220  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  180  00001224  24e7203c	addui	r7,r7,(LC4_LF0)&0xffff
  181  00001228  afa70000	sw	(r29),r7
  182  0000122c  0c0000a0	jal	_Printf
  183  00001230  54000000	nop; not filled.
  184  00001234  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  185  00001238  24e72048	addui	r7,r7,(LC5_LF0)&0xffff
  186  0000123c  afa70000	sw	(r29),r7
  187  00001240  afa20004	sw	4(r29),r2
  188  00001244  0c000088	jal	_Printf
  189  00001248  54000000	nop; not filled.
  190  0000124c  0c000b48	jal	_exit
  191  00001250  54000000	nop; not filled.
  192  00001254          	L2_LF0:
  193  00001254  0c00012c	jal	_TimerGet
  194  00001258  54000000	nop; not filled.
  195  0000125c  00260822	sub	r1,r1,r6
  196  00001260  23bdfff8	addi	r29,r29,#-8
  197  00001264  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  198  00001268  24e72054	addui	r7,r7,(LC6_LF0)&0xffff
  199  0000126c  afa70000	sw	(r29),r7
  200  00001270  afa10004	sw	4(r29),r1
  201  00001274  0c000058	jal	_Printf
  202  00001278  54000000	nop; not filled.
  203  0000127c  23bd0008	addi	r29,r29,#8
  204  00001280  0c000b14	jal	_exit
  205  00001284  54000000	nop
  206  00001288          	.endproc _main
  207                      ;;;
  208                      ;;; Stub functions for DLX traps.
  209                      ;;;
  210                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  211                      ;;;
  212                      ;;; The traps such as Open and Close
  213                      ;;; (note the capital letters) are for use by user programs.  The traps
  214                      ;;; with names such as open and close (lower case) are for use by the OS.
  215                      ;;;
  218  00001288          	.align 2
  220                      ;;; The following are the traps to be used by user-level programs
  221                      ;;;
  223  00001288          	.align 2
  224  00001288          	.proc _Open
  225  00001288          	.global _Open
  226  00001288          	_Open:
  227                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  228                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  229                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  230  00001288  44000213	trap	#0x213
  231  0000128c  4be00000	jr	r31
  232  00001290  54000000	nop
  233  00001294          	.endproc _Open
  235  00001294          	.proc _Close
  236  00001294          	.global _Close
  237  00001294          	_Close:
  238  00001294  44000214	trap	#0x214
  239  00001298  4be00000	jr	r31
  240  0000129c  54000000	nop
  241  000012a0          	.endproc _Close
  243  000012a0          	.proc _Read
  244  000012a0          	.global _Read
  245  000012a0          	_Read:
  246  000012a0  44000210	trap	#0x210
  247  000012a4  4be00000	jr	r31
  248  000012a8  54000000	nop
  249  000012ac          	.endproc _Read
  251  000012ac          	.proc _Write
  252  000012ac          	.global _Write
  253  000012ac          	_Write:
  254  000012ac  44000211	trap	#0x211
  255  000012b0  4be00000	jr	r31
  256  000012b4  54000000	nop
  257  000012b8          	.endproc _Write
  259  000012b8          	.proc _Lseek
  260  000012b8          	.global _Lseek
  261  000012b8          	_Lseek:
  262  000012b8  44000212	trap	#0x212
  263  000012bc  4be00000	jr	r31
  264  000012c0  54000000	nop
  265  000012c4          	.endproc _Lseek
  267  000012c4          	.proc _Putchar
  268  000012c4          	.global _Putchar
  269  000012c4          	_Putchar:
  270  000012c4  44000280	trap	#0x280
  271  000012c8  4be00000	jr	r31
  272  000012cc  54000000	nop
  273  000012d0          	.endproc _Putchar
  275  000012d0          	.proc _Printf
  276  000012d0          	.global _Printf
  277  000012d0          	_Printf:
  278  000012d0  44000201	trap	#0x201
  279  000012d4  4be00000	jr	r31
  280  000012d8  54000000	nop
  281  000012dc          	.endproc _Printf
  283  000012dc          	.proc _getpid
  284  000012dc          	.global _getpid
  285  000012dc          	_getpid:
  286  000012dc  44000431	trap	#0x431
  287  000012e0  4be00000	jr	r31
  288  000012e4  54000000	nop
  289  000012e8          	.endproc _getpid
  292  000012e8          	.proc _process_create
  293  000012e8          	.global _process_create
  294  000012e8          	_process_create:
  295  000012e8  44000432	trap	#0x432
  296  000012ec  4be00000	jr	r31
  297  000012f0  54000000	nop
  298  000012f4          	.endproc _process_create
  300  000012f4          	.proc _shmget
  301  000012f4          	.global _shmget
  302  000012f4          	_shmget:
  303  000012f4  44000440	trap	#0x440
  304  000012f8  4be00000	jr	r31
  305  000012fc  54000000	nop
  306  00001300          	.endproc _shmget
  308  00001300          	.proc _shmat
  309  00001300          	.global _shmat
  310  00001300          	_shmat:
  311  00001300  44000441	trap	#0x441
  312  00001304  4be00000	jr	r31
  313  00001308  54000000	nop
  314  0000130c          	.endproc _shmat
  316  0000130c          	.proc _sem_create
  317  0000130c          	.global _sem_create
  318  0000130c          	_sem_create:
  319  0000130c  44000450	trap	#0x450
  320  00001310  4be00000	jr	r31
  321  00001314  54000000	nop
  322  00001318          	.endproc _sem_create
  324  00001318          	.proc _sem_wait
  325  00001318          	.global _sem_wait
  326  00001318          	_sem_wait:
  327  00001318  44000451	trap	#0x451
  328  0000131c  4be00000	jr	r31
  329  00001320  54000000	nop
  330  00001324          	.endproc _sem_wait
  332  00001324          	.proc _sem_signal
  333  00001324          	.global _sem_signal
  334  00001324          	_sem_signal:
  335  00001324  44000452	trap	#0x452
  336  00001328  4be00000	jr	r31
  337  0000132c  54000000	nop
  338  00001330          	.endproc _sem_signal
  340  00001330          	.proc _lock_create
  341  00001330          	.global _lock_create
  342  00001330          	_lock_create:
  343  00001330  44000453	trap	#0x453
  344  00001334  4be00000	jr	r31
  345  00001338  54000000	nop
  346  0000133c          	.endproc _lock_create
  348  0000133c          	.proc _lock_acquire
  349  0000133c          	.global _lock_acquire
  350  0000133c          	_lock_acquire:
  351  0000133c  44000454	trap	#0x454
  352  00001340  4be00000	jr	r31
  353  00001344  54000000	nop
  354  00001348          	.endproc _lock_acquire
  356  00001348          	.proc _lock_release
  357  00001348          	.global _lock_release
  358  00001348          	_lock_release:
  359  00001348  44000455	trap	#0x455
  360  0000134c  4be00000	jr	r31
  361  00001350  54000000	nop
  362  00001354          	.endproc _lock_release
  364  00001354          	.proc _cond_create
  365  00001354          	.global _cond_create
  366  00001354          	_cond_create:
  367  00001354  44000456	trap	#0x456
  368  00001358  4be00000	jr	r31
  369  0000135c  54000000	nop
  370  00001360          	.endproc _cond_create
  372  00001360          	.proc _cond_wait
  373  00001360          	.global _cond_wait
  374  00001360          	_cond_wait:
  375  00001360  44000457	trap	#0x457
  376  00001364  4be00000	jr	r31
  377  00001368  54000000	nop
  378  0000136c          	.endproc _cond_wait
  380  0000136c          	.proc _cond_signal
  381  0000136c          	.global _cond_signal
  382  0000136c          	_cond_signal:
  383  0000136c  44000458	trap	#0x458
  384  00001370  4be00000	jr	r31
  385  00001374  54000000	nop
  386  00001378          	.endproc _cond_signal
  388  00001378          	.proc _cond_broadcast
  389  00001378          	.global _cond_broadcast
  390  00001378          	_cond_broadcast:
  391  00001378  44000455	trap	#0x455
  392  0000137c  4be00000	jr	r31
  393  00001380  54000000	nop
  394  00001384          	.endproc _cond_broadcast
  396  00001384          	.proc _TimerGet
  397  00001384          	.global _TimerGet
  398  00001384          	_TimerGet:
  399  00001384  44000050	trap	#0x50
  400  00001388  4be00000	jr	r31
  401  0000138c  54000000	nop
  402  00001390          	.endproc _TimerGet
  404  00001390          	.proc _yield
  405  00001390          	.global _yield
  406  00001390          	_yield:
  407  00001390  44000433	trap	#0x433
  408  00001394  4be00000	jr	r31
  409  00001398  54000000	nop
  410  0000139c          	.endproc _yield
  411                      ; Compiled by GCC
  413  0000139c          	.align 2
  414  0000139c          	.proc _isspace
  415  0000139c          	.global _isspace
  416  0000139c          	_isspace:
  417                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
  418  0000139c  afbefffc	sw	-4(r29),r30; push fp
  419  000013a0  001df020	add	r30,r0,r29; fp = sp
  420  000013a4  afbffff8	sw	-8(r29),r31; push ret addr
  421  000013a8  2fbd0010	subui	r29,r29,#16; alloc local storage
  422  000013ac  afa20000	sw	0(r29),r2
  423  000013b0  83c20003	lb	r2,3(r30)
  424  000013b4  201f0000	addi	r31,r0,#0
  425  000013b8  304100ff	andi	r1,r2,#0x00ff
  426  000013bc  60210020	seqi	r1,r1,#32
  427  000013c0  14200018	bnez	r1,L6_LF2
  428  000013c4  54000000	nop; not filled.
  429  000013c8  2041fff7	addi	r1,r2,#-9
  430  000013cc  302100ff	andi	r1,r1,#0x00ff
  431  000013d0  70210001	sleui	r1,r1,#1
  432  000013d4  10200008	beqz	r1,L5_LF2
  433  000013d8  54000000	nop; not filled.
  434  000013dc          	L6_LF2:
  435  000013dc  201f0001	addi	r31,r0,#1
  436  000013e0          	L5_LF2:
  437  000013e0  001f0820	add	r1,r0,r31
  438  000013e4  8fa20000	lw	r2,0(r29)
  439  000013e8  8fdffff8	lw	r31,-8(r30)
  440  000013ec  001ee820	add	r29,r0,r30
  441  000013f0  8fdefffc	lw	r30,-4(r30)
  442  000013f4  4be00000	jr	r31
  443  000013f8  54000000	nop
  444  000013fc          	.endproc _isspace
  445  000013fc          	.align 2
  446  000013fc          	.proc _isxdigit
  447  000013fc          	.global _isxdigit
  448  000013fc          	_isxdigit:
  449                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
  450  000013fc  afbefffc	sw	-4(r29),r30; push fp
  451  00001400  001df020	add	r30,r0,r29; fp = sp
  452  00001404  afbffff8	sw	-8(r29),r31; push ret addr
  453  00001408  2fbd0010	subui	r29,r29,#16; alloc local storage
  454  0000140c  afa20000	sw	0(r29),r2
  455  00001410  83df0003	lb	r31,3(r30)
  456  00001414  20020000	addi	r2,r0,#0
  457  00001418  23e1ffd0	addi	r1,r31,#-48
  458  0000141c  302100ff	andi	r1,r1,#0x00ff
  459  00001420  70210009	sleui	r1,r1,#9
  460  00001424  14200028	bnez	r1,L12_LF2
  461  00001428  54000000	nop; not filled.
  462  0000142c  23e1ff9f	addi	r1,r31,#-97
  463  00001430  302100ff	andi	r1,r1,#0x00ff
  464  00001434  70210005	sleui	r1,r1,#5
  465  00001438  14200014	bnez	r1,L12_LF2
  466  0000143c  54000000	nop; not filled.
  467  00001440  33e100ff	andi	r1,r31,#0x00ff
  468  00001444  64210041	snei	r1,r1,#65
  469  00001448  14200008	bnez	r1,L11_LF2
  470  0000144c  54000000	nop; not filled.
  471  00001450          	L12_LF2:
  472  00001450  20020001	addi	r2,r0,#1
  473  00001454          	L11_LF2:
  474  00001454  00020820	add	r1,r0,r2
  475  00001458  8fa20000	lw	r2,0(r29)
  476  0000145c  8fdffff8	lw	r31,-8(r30)
  477  00001460  001ee820	add	r29,r0,r30
  478  00001464  8fdefffc	lw	r30,-4(r30)
  479  00001468  4be00000	jr	r31
  480  0000146c  54000000	nop
  481  00001470          	.endproc _isxdigit
  482  00001470          	.align 2
  483  00001470          	.proc _dstrcpy
  484  00001470          	.global _dstrcpy
  485  00001470          	_dstrcpy:
  486                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
  487  00001470  afbefffc	sw	-4(r29),r30; push fp
  488  00001474  001df020	add	r30,r0,r29; fp = sp
  489  00001478  afbffff8	sw	-8(r29),r31; push ret addr
  490  0000147c  2fbd0010	subui	r29,r29,#16; alloc local storage
  491  00001480  afa20000	sw	0(r29),r2
  492  00001484  afa30004	sw	4(r29),r3
  493  00001488  8fdf0000	lw	r31,(r30)
  494  0000148c  8fc20004	lw	r2,4(r30)
  495  00001490  001f1820	add	r3,r0,r31
  496  00001494          	L19_LF2:
  497  00001494  80410000	lb	r1,(r2)
  498  00001498  a3e10000	sb	(r31),r1
  499  0000149c  20420001	addi	r2,r2,#1
  500  000014a0  23ff0001	addi	r31,r31,#1
  501  000014a4  302100ff	andi	r1,r1,#0x00ff
  502  000014a8  64210000	snei	r1,r1,#0
  503  000014ac  1420ffe4	bnez	r1,L19_LF2
  504  000014b0  54000000	nop; not filled.
  505  000014b4  00030820	add	r1,r0,r3
  506  000014b8  8fa20000	lw	r2,0(r29)
  507  000014bc  8fa30004	lw	r3,4(r29)
  508  000014c0  8fdffff8	lw	r31,-8(r30)
  509  000014c4  001ee820	add	r29,r0,r30
  510  000014c8  8fdefffc	lw	r30,-4(r30)
  511  000014cc  4be00000	jr	r31
  512  000014d0  54000000	nop
  513  000014d4          	.endproc _dstrcpy
  514  000014d4          	.align 2
  515  000014d4          	.proc _dstrncpy
  516  000014d4          	.global _dstrncpy
  517  000014d4          	_dstrncpy:
  518                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
  519  000014d4  afbefffc	sw	-4(r29),r30; push fp
  520  000014d8  001df020	add	r30,r0,r29; fp = sp
  521  000014dc  afbffff8	sw	-8(r29),r31; push ret addr
  522  000014e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  523  000014e4  afa20000	sw	0(r29),r2
  524  000014e8  afa30004	sw	4(r29),r3
  525  000014ec  afa40008	sw	8(r29),r4
  526  000014f0  8fc20000	lw	r2,(r30)
  527  000014f4  8fc30004	lw	r3,4(r30)
  528  000014f8  8fdf0008	lw	r31,8(r30)
  529  000014fc  00022020	add	r4,r0,r2
  530  00001500  08000024	j	L37_LF2
  531  00001504  54000000	nop; not filled.
  532  00001508          	L34_LF2:
  533  00001508  80610000	lb	r1,(r3)
  534  0000150c  a0410000	sb	(r2),r1
  535  00001510  20630001	addi	r3,r3,#1
  536  00001514  20420001	addi	r2,r2,#1
  537  00001518  302100ff	andi	r1,r1,#0x00ff
  538  0000151c  64210000	snei	r1,r1,#0
  539  00001520  10200018	beqz	r1,L32_LF2
  540  00001524  54000000	nop; not filled.
  541  00001528          	L37_LF2:
  542  00001528  001f0820	add	r1,r0,r31
  543  0000152c  23ffffff	addi	r31,r31,#-1
  544  00001530  70210000	slei	r1,r1,#0
  545  00001534  1020ffd0	beqz	r1,L34_LF2
  546  00001538  54000000	nop; not filled.
  547  0000153c          	L32_LF2:
  548  0000153c  00040820	add	r1,r0,r4
  549  00001540  8fa20000	lw	r2,0(r29)
  550  00001544  8fa30004	lw	r3,4(r29)
  551  00001548  8fa40008	lw	r4,8(r29)
  552  0000154c  8fdffff8	lw	r31,-8(r30)
  553  00001550  001ee820	add	r29,r0,r30
  554  00001554  8fdefffc	lw	r30,-4(r30)
  555  00001558  4be00000	jr	r31
  556  0000155c  54000000	nop
  557  00001560          	.endproc _dstrncpy
  558  00001560          	.align 2
  559  00001560          	.proc _dstrcat
  560  00001560          	.global _dstrcat
  561  00001560          	_dstrcat:
  562                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
  563  00001560  afbefffc	sw	-4(r29),r30; push fp
  564  00001564  001df020	add	r30,r0,r29; fp = sp
  565  00001568  afbffff8	sw	-8(r29),r31; push ret addr
  566  0000156c  2fbd0010	subui	r29,r29,#16; alloc local storage
  567  00001570  afa20000	sw	0(r29),r2
  568  00001574  afa30004	sw	4(r29),r3
  569  00001578  8fdf0000	lw	r31,(r30)
  570  0000157c  001f1820	add	r3,r0,r31
  571  00001580  90610000	lbu	r1,(r3)
  572  00001584  64210000	snei	r1,r1,#0
  573  00001588  10200018	beqz	r1,L50_LF2
  574  0000158c  54000000	nop; not filled.
  575  00001590          	L51_LF2:
  576  00001590  23ff0001	addi	r31,r31,#1
  577  00001594  93e10000	lbu	r1,(r31)
  578  00001598  64210000	snei	r1,r1,#0
  579  0000159c  1420fff0	bnez	r1,L51_LF2
  580  000015a0  54000000	nop; not filled.
  581  000015a4          	L50_LF2:
  582  000015a4  001f1020	add	r2,r0,r31
  583  000015a8  8fdf0004	lw	r31,4(r30)
  584  000015ac          	L54_LF2:
  585  000015ac  83e10000	lb	r1,(r31)
  586  000015b0  a0410000	sb	(r2),r1
  587  000015b4  23ff0001	addi	r31,r31,#1
  588  000015b8  20420001	addi	r2,r2,#1
  589  000015bc  302100ff	andi	r1,r1,#0x00ff
  590  000015c0  64210000	snei	r1,r1,#0
  591  000015c4  1420ffe4	bnez	r1,L54_LF2
  592  000015c8  54000000	nop; not filled.
  593  000015cc  00030820	add	r1,r0,r3
  594  000015d0  8fa20000	lw	r2,0(r29)
  595  000015d4  8fa30004	lw	r3,4(r29)
  596  000015d8  8fdffff8	lw	r31,-8(r30)
  597  000015dc  001ee820	add	r29,r0,r30
  598  000015e0  8fdefffc	lw	r30,-4(r30)
  599  000015e4  4be00000	jr	r31
  600  000015e8  54000000	nop
  601  000015ec          	.endproc _dstrcat
  602  000015ec          	.align 2
  603  000015ec          	.proc _dstrncmp
  604  000015ec          	.global _dstrncmp
  605  000015ec          	_dstrncmp:
  606                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
  607  000015ec  afbefffc	sw	-4(r29),r30; push fp
  608  000015f0  001df020	add	r30,r0,r29; fp = sp
  609  000015f4  afbffff8	sw	-8(r29),r31; push ret addr
  610  000015f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  611  000015fc  afa20000	sw	0(r29),r2
  612  00001600  afa30004	sw	4(r29),r3
  613  00001604  afa40008	sw	8(r29),r4
  614  00001608  afa5000c	sw	12(r29),r5
  615  0000160c  8fc30000	lw	r3,(r30)
  616  00001610  8fc40004	lw	r4,4(r30)
  617  00001614  8fc50008	lw	r5,8(r30)
  618  00001618  20020000	addi	r2,r0,#0
  619  0000161c  0045082a	slt	r1,r2,r5
  620  00001620  1020003c	beqz	r1,L73_LF2
  621  00001624  54000000	nop; not filled.
  622  00001628          	L75_LF2:
  623  00001628  909f0000	lbu	r31,(r4)
  624  0000162c  67e10000	snei	r1,r31,#0
  625  00001630  10200038	beqz	r1,L86_LF2
  626  00001634  54000000	nop; not filled.
  627  00001638  90610000	lbu	r1,(r3)
  628  0000163c  003f0829	sne	r1,r1,r31
  629  00001640  1420001c	bnez	r1,L73_LF2
  630  00001644  54000000	nop; not filled.
  631  00001648  20630001	addi	r3,r3,#1
  632  0000164c  20840001	addi	r4,r4,#1
  633  00001650  20420001	addi	r2,r2,#1
  634  00001654  0045082a	slt	r1,r2,r5
  635  00001658  1420ffcc	bnez	r1,L75_LF2
  636  0000165c  54000000	nop; not filled.
  637  00001660          	L73_LF2:
  638  00001660  00450828	seq	r1,r2,r5
  639  00001664  10200010	beqz	r1,L80_LF2
  640  00001668  54000000	nop; not filled.
  641  0000166c          	L86_LF2:
  642  0000166c  20010000	addi	r1,r0,#0
  643  00001670  08000028	j	L84_LF2
  644  00001674  54000000	nop; not filled.
  645  00001678          	L80_LF2:
  646  00001678  907f0000	lbu	r31,(r3)
  647  0000167c  90830000	lbu	r3,(r4)
  648  00001680  03e30822	sub	r1,r31,r3
  649  00001684  74210000	sgei	r1,r1,#0
  650  00001688  2002ffff	addi	r2,r0,#-1
  651  0000168c  10200008	beqz	r1,L82_LF2
  652  00001690  54000000	nop; not filled.
  653  00001694  03e31029	sne	r2,r31,r3
  654  00001698          	L82_LF2:
  655  00001698  00020820	add	r1,r0,r2
  656  0000169c          	L84_LF2:
  657  0000169c  8fa20000	lw	r2,0(r29)
  658  000016a0  8fa30004	lw	r3,4(r29)
  659  000016a4  8fa40008	lw	r4,8(r29)
  660  000016a8  8fa5000c	lw	r5,12(r29)
  661  000016ac  8fdffff8	lw	r31,-8(r30)
  662  000016b0  001ee820	add	r29,r0,r30
  663  000016b4  8fdefffc	lw	r30,-4(r30)
  664  000016b8  4be00000	jr	r31
  665  000016bc  54000000	nop
  666  000016c0          	.endproc _dstrncmp
  667  000016c0          	.align 2
  668  000016c0          	.proc _dstrlen
  669  000016c0          	.global _dstrlen
  670  000016c0          	_dstrlen:
  671                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
  672  000016c0  afbefffc	sw	-4(r29),r30; push fp
  673  000016c4  001df020	add	r30,r0,r29; fp = sp
  674  000016c8  afbffff8	sw	-8(r29),r31; push ret addr
  675  000016cc  2fbd0010	subui	r29,r29,#16; alloc local storage
  676  000016d0  afa20000	sw	0(r29),r2
  677  000016d4  8fdf0000	lw	r31,(r30)
  678  000016d8  20020000	addi	r2,r0,#0
  679  000016dc  08000008	j	L97_LF2
  680  000016e0  54000000	nop; not filled.
  681  000016e4          	L95_LF2:
  682  000016e4  20420001	addi	r2,r2,#1
  683  000016e8          	L97_LF2:
  684  000016e8  93e10000	lbu	r1,(r31)
  685  000016ec  23ff0001	addi	r31,r31,#1
  686  000016f0  64210000	snei	r1,r1,#0
  687  000016f4  1420ffec	bnez	r1,L95_LF2
  688  000016f8  54000000	nop; not filled.
  689  000016fc  00020820	add	r1,r0,r2
  690  00001700  8fa20000	lw	r2,0(r29)
  691  00001704  8fdffff8	lw	r31,-8(r30)
  692  00001708  001ee820	add	r29,r0,r30
  693  0000170c  8fdefffc	lw	r30,-4(r30)
  694  00001710  4be00000	jr	r31
  695  00001714  54000000	nop
  696  00001718          	.endproc _dstrlen
  697  00001718          	.align 2
  698  00001718          	.proc _dstrstr
  699  00001718          	.global _dstrstr
  700  00001718          	_dstrstr:
  701                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
  702  00001718  afbefffc	sw	-4(r29),r30; push fp
  703  0000171c  001df020	add	r30,r0,r29; fp = sp
  704  00001720  afbffff8	sw	-8(r29),r31; push ret addr
  705  00001724  2fbd0020	subui	r29,r29,#32; alloc local storage
  706  00001728  afa20000	sw	0(r29),r2
  707  0000172c  afa30004	sw	4(r29),r3
  708  00001730  afa40008	sw	8(r29),r4
  709  00001734  afa5000c	sw	12(r29),r5
  710  00001738  afa60010	sw	16(r29),r6
  711  0000173c  afa70014	sw	20(r29),r7
  712  00001740  8fc50000	lw	r5,(r30)
  713  00001744  8fc70004	lw	r7,4(r30)
  714  00001748  20030000	addi	r3,r0,#0
  715  0000174c  90e10000	lbu	r1,(r7)
  716  00001750  20e20001	addi	r2,r7,#1
  717  00001754  64210000	snei	r1,r1,#0
  718  00001758  1020001c	beqz	r1,L125_LF2
  719  0000175c  54000000	nop; not filled.
  720  00001760          	L126_LF2:
  721  00001760  20630001	addi	r3,r3,#1
  722  00001764  90410000	lbu	r1,(r2)
  723  00001768  20420001	addi	r2,r2,#1
  724  0000176c  64210000	snei	r1,r1,#0
  725  00001770  1420ffec	bnez	r1,L126_LF2
  726  00001774  54000000	nop; not filled.
  727  00001778          	L125_LF2:
  728  00001778  00033020	add	r6,r0,r3
  729  0000177c  080000ac	j	L149_LF2
  730  00001780  54000000	nop; not filled.
  731  00001784          	L130_LF2:
  732  00001784  00051820	add	r3,r0,r5
  733  00001788  00072020	add	r4,r0,r7
  734  0000178c  20020000	addi	r2,r0,#0
  735  00001790  0046082a	slt	r1,r2,r6
  736  00001794  1020003c	beqz	r1,L134_LF2
  737  00001798  54000000	nop; not filled.
  738  0000179c          	L136_LF2:
  739  0000179c  909f0000	lbu	r31,(r4)
  740  000017a0  67e10000	snei	r1,r31,#0
  741  000017a4  10200038	beqz	r1,L150_LF2
  742  000017a8  54000000	nop; not filled.
  743  000017ac  90610000	lbu	r1,(r3)
  744  000017b0  003f0829	sne	r1,r1,r31
  745  000017b4  1420001c	bnez	r1,L134_LF2
  746  000017b8  54000000	nop; not filled.
  747  000017bc  20630001	addi	r3,r3,#1
  748  000017c0  20840001	addi	r4,r4,#1
  749  000017c4  20420001	addi	r2,r2,#1
  750  000017c8  0046082a	slt	r1,r2,r6
  751  000017cc  1420ffcc	bnez	r1,L136_LF2
  752  000017d0  54000000	nop; not filled.
  753  000017d4          	L134_LF2:
  754  000017d4  00460828	seq	r1,r2,r6
  755  000017d8  10200010	beqz	r1,L141_LF2
  756  000017dc  54000000	nop; not filled.
  757  000017e0          	L150_LF2:
  758  000017e0  20010000	addi	r1,r0,#0
  759  000017e4  08000028	j	L132_LF2
  760  000017e8  54000000	nop; not filled.
  761  000017ec          	L141_LF2:
  762  000017ec  90630000	lbu	r3,(r3)
  763  000017f0  90820000	lbu	r2,(r4)
  764  000017f4  00620822	sub	r1,r3,r2
  765  000017f8  74210000	sgei	r1,r1,#0
  766  000017fc  201fffff	addi	r31,r0,#-1
  767  00001800  10200008	beqz	r1,L143_LF2
  768  00001804  54000000	nop; not filled.
  769  00001808  0062f829	sne	r31,r3,r2
  770  0000180c          	L143_LF2:
  771  0000180c  001f0820	add	r1,r0,r31
  772  00001810          	L132_LF2:
  773  00001810  64210000	snei	r1,r1,#0
  774  00001814  14200010	bnez	r1,L131_LF2
  775  00001818  54000000	nop; not filled.
  776  0000181c  00050820	add	r1,r0,r5
  777  00001820  0800001c	j	L146_LF2
  778  00001824  54000000	nop; not filled.
  779  00001828          	L131_LF2:
  780  00001828  20a50001	addi	r5,r5,#1
  781  0000182c          	L149_LF2:
  782  0000182c  90a10000	lbu	r1,(r5)
  783  00001830  64210000	snei	r1,r1,#0
  784  00001834  1420ff4c	bnez	r1,L130_LF2
  785  00001838  54000000	nop; not filled.
  786  0000183c  20010000	addi	r1,r0,#0
  787  00001840          	L146_LF2:
  788  00001840  8fa20000	lw	r2,0(r29)
  789  00001844  8fa30004	lw	r3,4(r29)
  790  00001848  8fa40008	lw	r4,8(r29)
  791  0000184c  8fa5000c	lw	r5,12(r29)
  792  00001850  8fa60010	lw	r6,16(r29)
  793  00001854  8fa70014	lw	r7,20(r29)
  794  00001858  8fdffff8	lw	r31,-8(r30)
  795  0000185c  001ee820	add	r29,r0,r30
  796  00001860  8fdefffc	lw	r30,-4(r30)
  797  00001864  4be00000	jr	r31
  798  00001868  54000000	nop
  799  0000186c          	.endproc _dstrstr
  800  0000186c          	.align 2
  801  0000186c          	.proc _dmindex
  802  0000186c          	.global _dmindex
  803  0000186c          	_dmindex:
  804                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
  805  0000186c  afbefffc	sw	-4(r29),r30; push fp
  806  00001870  001df020	add	r30,r0,r29; fp = sp
  807  00001874  afbffff8	sw	-8(r29),r31; push ret addr
  808  00001878  2fbd0020	subui	r29,r29,#32; alloc local storage
  809  0000187c  afa20000	sw	0(r29),r2
  810  00001880  afa30004	sw	4(r29),r3
  811  00001884  afa40008	sw	8(r29),r4
  812  00001888  afa5000c	sw	12(r29),r5
  813  0000188c  afa60010	sw	16(r29),r6
  814  00001890  8fc40000	lw	r4,(r30)
  815  00001894  8fc60004	lw	r6,4(r30)
  816  00001898  90810000	lbu	r1,(r4)
  817  0000189c  64210000	snei	r1,r1,#0
  818  000018a0  10200060	beqz	r1,L164_LF2
  819  000018a4  54000000	nop; not filled.
  820  000018a8  00012820	add	r5,r0,r1
  821  000018ac          	L165_LF2:
  822  000018ac  00061020	add	r2,r0,r6
  823  000018b0  80df0000	lb	r31,(r6)
  824  000018b4  33e100ff	andi	r1,r31,#0x00ff
  825  000018b8  64210000	snei	r1,r1,#0
  826  000018bc  1020003c	beqz	r1,L163_LF2
  827  000018c0  54000000	nop; not filled.
  828  000018c4  90830000	lbu	r3,(r4)
  829  000018c8          	L169_LF2:
  830  000018c8  33e100ff	andi	r1,r31,#0x00ff
  831  000018cc  00610828	seq	r1,r3,r1
  832  000018d0  10200010	beqz	r1,L168_LF2
  833  000018d4  54000000	nop; not filled.
  834  000018d8  00040820	add	r1,r0,r4
  835  000018dc  08000028	j	L173_LF2
  836  000018e0  54000000	nop; not filled.
  837  000018e4          	L168_LF2:
  838  000018e4  20420001	addi	r2,r2,#1
  839  000018e8  805f0000	lb	r31,(r2)
  840  000018ec  33e100ff	andi	r1,r31,#0x00ff
  841  000018f0  64210000	snei	r1,r1,#0
  842  000018f4  1420ffd0	bnez	r1,L169_LF2
  843  000018f8  54000000	nop; not filled.
  844  000018fc          	L163_LF2:
  845  000018fc  14a0ffac	bnez	r5,L165_LF2
  846  00001900  54000000	nop; not filled.
  847  00001904          	L164_LF2:
  848  00001904  20010000	addi	r1,r0,#0
  849  00001908          	L173_LF2:
  850  00001908  8fa20000	lw	r2,0(r29)
  851  0000190c  8fa30004	lw	r3,4(r29)
  852  00001910  8fa40008	lw	r4,8(r29)
  853  00001914  8fa5000c	lw	r5,12(r29)
  854  00001918  8fa60010	lw	r6,16(r29)
  855  0000191c  8fdffff8	lw	r31,-8(r30)
  856  00001920  001ee820	add	r29,r0,r30
  857  00001924  8fdefffc	lw	r30,-4(r30)
  858  00001928  4be00000	jr	r31
  859  0000192c  54000000	nop
  860  00001930          	.endproc _dmindex
  861  00001930          	.align 2
  862  00001930          	.proc _dindex
  863  00001930          	.global _dindex
  864  00001930          	_dindex:
  865                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
  866  00001930  afbefffc	sw	-4(r29),r30; push fp
  867  00001934  001df020	add	r30,r0,r29; fp = sp
  868  00001938  afbffff8	sw	-8(r29),r31; push ret addr
  869  0000193c  2fbd0010	subui	r29,r29,#16; alloc local storage
  870  00001940  afa20000	sw	0(r29),r2
  871  00001944  afa30004	sw	4(r29),r3
  872  00001948  8fc20000	lw	r2,(r30)
  873  0000194c  8fc30004	lw	r3,4(r30)
  874  00001950  08000024	j	L187_LF2
  875  00001954  54000000	nop; not filled.
  876  00001958          	L183_LF2:
  877  00001958  33e100ff	andi	r1,r31,#0x00ff
  878  0000195c  00230828	seq	r1,r1,r3
  879  00001960  10200010	beqz	r1,L184_LF2
  880  00001964  54000000	nop; not filled.
  881  00001968  00020820	add	r1,r0,r2
  882  0000196c  08000020	j	L186_LF2
  883  00001970  54000000	nop; not filled.
  884  00001974          	L184_LF2:
  885  00001974  20420001	addi	r2,r2,#1
  886  00001978          	L187_LF2:
  887  00001978  805f0000	lb	r31,(r2)
  888  0000197c  33e100ff	andi	r1,r31,#0x00ff
  889  00001980  64210000	snei	r1,r1,#0
  890  00001984  1420ffd0	bnez	r1,L183_LF2
  891  00001988  54000000	nop; not filled.
  892  0000198c  20010000	addi	r1,r0,#0
  893  00001990          	L186_LF2:
  894  00001990  8fa20000	lw	r2,0(r29)
  895  00001994  8fa30004	lw	r3,4(r29)
  896  00001998  8fdffff8	lw	r31,-8(r30)
  897  0000199c  001ee820	add	r29,r0,r30
  898  000019a0  8fdefffc	lw	r30,-4(r30)
  899  000019a4  4be00000	jr	r31
  900  000019a8  54000000	nop
  901  000019ac          	.endproc _dindex
  902  000019ac          	.align 2
  903  000019ac          	.proc _ditoa
  904  000019ac          	.global _ditoa
  905  000019ac          	_ditoa:
  906                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
  907  000019ac  afbefffc	sw	-4(r29),r30; push fp
  908  000019b0  001df020	add	r30,r0,r29; fp = sp
  909  000019b4  afbffff8	sw	-8(r29),r31; push ret addr
  910  000019b8  2fbd0020	subui	r29,r29,#32; alloc local storage
  911  000019bc  afa20000	sw	0(r29),r2
  912  000019c0  afa30004	sw	4(r29),r3
  913  000019c4  afa40008	sw	8(r29),r4
  914  000019c8  afa5000c	sw	12(r29),r5
  915  000019cc  afa60010	sw	16(r29),r6
  916  000019d0  8fc30000	lw	r3,(r30)
  917  000019d4  8fc40004	lw	r4,4(r30)
  918  000019d8  68610000	slti	r1,r3,#0
  919  000019dc  10200010	beqz	r1,L203_LF2
  920  000019e0  54000000	nop; not filled.
  921  000019e4  2006002d	addi	r6,r0,(#0x2d)&0xff
  922  000019e8  08000014	j	L216_LF2
  923  000019ec  54000000	nop; not filled.
  924  000019f0          	L203_LF2:
  925  000019f0  64610000	snei	r1,r3,#0
  926  000019f4  14200018	bnez	r1,L205_LF2
  927  000019f8  54000000	nop; not filled.
  928  000019fc  20060030	addi	r6,r0,(#0x30)&0xff
  929  00001a00          	L216_LF2:
  930  00001a00  a0860000	sb	(r4),r6
  931  00001a04  20840001	addi	r4,r4,#1
  932  00001a08  0800007c	j	L204_LF2
  933  00001a0c  54000000	nop; not filled.
  934  00001a10          	L205_LF2:
  935  00001a10  201f0001	addi	r31,r0,#1
  936  00001a14  03e3082c	sle	r1,r31,r3
  937  00001a18  1020001c	beqz	r1,L208_LF2
  938  00001a1c  54000000	nop; not filled.
  939  00001a20          	L209_LF2:
  940  00001a20  53e10002	slli	r1,r31,#0x2
  941  00001a24  003f0820	add	r1,r1,r31
  942  00001a28  503f0001	slli	r31,r1,#0x1
  943  00001a2c  03e3082c	sle	r1,r31,r3
  944  00001a30  1420ffec	bnez	r1,L209_LF2
  945  00001a34  54000000	nop; not filled.
  946  00001a38          	L208_LF2:
  947  00001a38  2005000a	addi	r5,r0,#10
  948  00001a3c          	L212_LF2:
  949  00001a3c  03e00035	movi2fp	f0,r31
  950  00001a40  00a00835	movi2fp	f1,r5
  951  00001a44  0401000f	div	f0,f0,f1
  952  00001a48  0000f834	movfp2i	r31,f0
  953  00001a4c  00600035	movi2fp	f0,r3
  954  00001a50  03e00835	movi2fp	f1,r31
  955  00001a54  0401000f	div	f0,f0,f1
  956  00001a58  00001034	movfp2i	r2,f0
  957  00001a5c  20410030	addi	r1,r2,#48
  958  00001a60  a0810000	sb	(r4),r1
  959  00001a64  20840001	addi	r4,r4,#1
  960  00001a68  00400035	movi2fp	f0,r2
  961  00001a6c  03e00835	movi2fp	f1,r31
  962  00001a70  0401000e	mult	f0,f0,f1
  963  00001a74  00000834	movfp2i	r1,f0
  964  00001a78  00611822	sub	r3,r3,r1
  965  00001a7c  6fe10001	sgti	r1,r31,#1
  966  00001a80  1420ffb8	bnez	r1,L212_LF2
  967  00001a84  54000000	nop; not filled.
  968  00001a88          	L204_LF2:
  969  00001a88  20060000	addi	r6,r0,(#0x0)&0xff
  970  00001a8c  a0860000	sb	(r4),r6
  971  00001a90  8fa20000	lw	r2,0(r29)
  972  00001a94  8fa30004	lw	r3,4(r29)
  973  00001a98  8fa40008	lw	r4,8(r29)
  974  00001a9c  8fa5000c	lw	r5,12(r29)
  975  00001aa0  8fa60010	lw	r6,16(r29)
  976  00001aa4  8fdffff8	lw	r31,-8(r30)
  977  00001aa8  001ee820	add	r29,r0,r30
  978  00001aac  8fdefffc	lw	r30,-4(r30)
  979  00001ab0  4be00000	jr	r31
  980  00001ab4  54000000	nop
  981  00001ab8          	.endproc _ditoa
  982  00001ab8          	.align 2
  983  00001ab8          	.proc _dstrtol
  984  00001ab8          	.global _dstrtol
  985  00001ab8          	_dstrtol:
  986                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
  987  00001ab8  afbefffc	sw	-4(r29),r30; push fp
  988  00001abc  001df020	add	r30,r0,r29; fp = sp
  989  00001ac0  afbffff8	sw	-8(r29),r31; push ret addr
  990  00001ac4  2fbd0020	subui	r29,r29,#32; alloc local storage
  991  00001ac8  afa20000	sw	0(r29),r2
  992  00001acc  afa30004	sw	4(r29),r3
  993  00001ad0  afa40008	sw	8(r29),r4
  994  00001ad4  afa5000c	sw	12(r29),r5
  995  00001ad8  afa60010	sw	16(r29),r6
  996  00001adc  8fc20000	lw	r2,(r30)
  997  00001ae0  8fc50004	lw	r5,4(r30)
  998  00001ae4  8fc40008	lw	r4,8(r30)
  999  00001ae8  20030000	addi	r3,r0,#0
 1000  00001aec  08000008	j	L247_LF2
 1001  00001af0  54000000	nop; not filled.
 1002  00001af4          	L220_LF2:
 1003  00001af4  20420001	addi	r2,r2,#1
 1004  00001af8          	L247_LF2:
 1005  00001af8  805f0000	lb	r31,(r2)
 1006  00001afc  33e100ff	andi	r1,r31,#0x00ff
 1007  00001b00  60210020	seqi	r1,r1,#32
 1008  00001b04  1420ffec	bnez	r1,L220_LF2
 1009  00001b08  54000000	nop; not filled.
 1010  00001b0c  23e1fff7	addi	r1,r31,#-9
 1011  00001b10  302100ff	andi	r1,r1,#0x00ff
 1012  00001b14  70210001	sleui	r1,r1,#1
 1013  00001b18  1420ffd8	bnez	r1,L220_LF2
 1014  00001b1c  54000000	nop; not filled.
 1015  00001b20  64a10000	snei	r1,r5,#0
 1016  00001b24  10200008	beqz	r1,L222_LF2
 1017  00001b28  54000000	nop; not filled.
 1018  00001b2c  aca20000	sw	(r5),r2
 1019  00001b30          	L222_LF2:
 1020  00001b30  905f0000	lbu	r31,(r2)
 1021  00001b34  67e10000	snei	r1,r31,#0
 1022  00001b38  10200090	beqz	r1,L248_LF2
 1023  00001b3c  54000000	nop; not filled.
 1024  00001b40  63e1002d	seqi	r1,r31,#45
 1025  00001b44  10200014	beqz	r1,L224_LF2
 1026  00001b48  54000000	nop; not filled.
 1027  00001b4c  2006ffff	addi	r6,r0,#-1
 1028  00001b50  20420001	addi	r2,r2,#1
 1029  00001b54  08000008	j	L225_LF2
 1030  00001b58  54000000	nop; not filled.
 1031  00001b5c          	L224_LF2:
 1032  00001b5c  20060001	addi	r6,r0,#1
 1033  00001b60          	L225_LF2:
 1034  00001b60  64810000	snei	r1,r4,#0
 1035  00001b64  14200054	bnez	r1,L226_LF2
 1036  00001b68  54000000	nop; not filled.
 1037  00001b6c  90410000	lbu	r1,(r2)
 1038  00001b70  60210030	seqi	r1,r1,#48
 1039  00001b74  10200040	beqz	r1,L227_LF2
 1040  00001b78  54000000	nop; not filled.
 1041  00001b7c  20420001	addi	r2,r2,#1
 1042  00001b80  905f0000	lbu	r31,(r2)
 1043  00001b84  63e10078	seqi	r1,r31,#120
 1044  00001b88  14200010	bnez	r1,L229_LF2
 1045  00001b8c  54000000	nop; not filled.
 1046  00001b90  63e10058	seqi	r1,r31,#88
 1047  00001b94  10200014	beqz	r1,L228_LF2
 1048  00001b98  54000000	nop; not filled.
 1049  00001b9c          	L229_LF2:
 1050  00001b9c  20040010	addi	r4,r0,#16
 1051  00001ba0  20420001	addi	r2,r2,#1
 1052  00001ba4  08000014	j	L226_LF2
 1053  00001ba8  54000000	nop; not filled.
 1054  00001bac          	L228_LF2:
 1055  00001bac  20040008	addi	r4,r0,#8
 1056  00001bb0  08000008	j	L226_LF2
 1057  00001bb4  54000000	nop; not filled.
 1058  00001bb8          	L227_LF2:
 1059  00001bb8  2004000a	addi	r4,r0,#10
 1060  00001bbc          	L226_LF2:
 1061  00001bbc  2081ffff	addi	r1,r4,#-1
 1062  00001bc0  6c21000f	sgtui	r1,r1,#15
 1063  00001bc4  10200010	beqz	r1,L233_LF2
 1064  00001bc8  54000000	nop; not filled.
 1065  00001bcc          	L248_LF2:
 1066  00001bcc  00030820	add	r1,r0,r3
 1067  00001bd0  080000c4	j	L245_LF2
 1068  00001bd4  54000000	nop; not filled.
 1069  00001bd8          	L233_LF2:
 1070  00001bd8  805f0000	lb	r31,(r2)
 1071  00001bdc  23e1ffd0	addi	r1,r31,#-48
 1072  00001be0  302100ff	andi	r1,r1,#0x00ff
 1073  00001be4  70210009	sleui	r1,r1,#9
 1074  00001be8  10200014	beqz	r1,L236_LF2
 1075  00001bec  54000000	nop; not filled.
 1076  00001bf0  33e100ff	andi	r1,r31,#0x00ff
 1077  00001bf4  2021ffd0	addi	r1,r1,#-48
 1078  00001bf8  08000050	j	L237_LF2
 1079  00001bfc  54000000	nop; not filled.
 1080  00001c00          	L236_LF2:
 1081  00001c00  23e1ff9f	addi	r1,r31,#-97
 1082  00001c04  302100ff	andi	r1,r1,#0x00ff
 1083  00001c08  70210019	sleui	r1,r1,#25
 1084  00001c0c  10200014	beqz	r1,L238_LF2
 1085  00001c10  54000000	nop; not filled.
 1086  00001c14  33e100ff	andi	r1,r31,#0x00ff
 1087  00001c18  2021ffa9	addi	r1,r1,#-87
 1088  00001c1c  0800002c	j	L237_LF2
 1089  00001c20  54000000	nop; not filled.
 1090  00001c24          	L238_LF2:
 1091  00001c24  23e1ffbf	addi	r1,r31,#-65
 1092  00001c28  302100ff	andi	r1,r1,#0x00ff
 1093  00001c2c  70210019	sleui	r1,r1,#25
 1094  00001c30  10200014	beqz	r1,L240_LF2
 1095  00001c34  54000000	nop; not filled.
 1096  00001c38  33e100ff	andi	r1,r31,#0x00ff
 1097  00001c3c  2021ffc9	addi	r1,r1,#-55
 1098  00001c40  08000008	j	L237_LF2
 1099  00001c44  54000000	nop; not filled.
 1100  00001c48          	L240_LF2:
 1101  00001c48  200103e8	addi	r1,r0,#1000
 1102  00001c4c          	L237_LF2:
 1103  00001c4c  0024f82a	slt	r31,r1,r4
 1104  00001c50  13e00024	beqz	r31,L246_LF2
 1105  00001c54  54000000	nop; not filled.
 1106  00001c58  00600035	movi2fp	f0,r3
 1107  00001c5c  00800835	movi2fp	f1,r4
 1108  00001c60  0401000e	mult	f0,f0,f1
 1109  00001c64  00001834	movfp2i	r3,f0
 1110  00001c68  00611820	add	r3,r3,r1
 1111  00001c6c  20420001	addi	r2,r2,#1
 1112  00001c70  17e0ff64	bnez	r31,L233_LF2
 1113  00001c74  54000000	nop; not filled.
 1114  00001c78          	L246_LF2:
 1115  00001c78  64a10000	snei	r1,r5,#0
 1116  00001c7c  10200008	beqz	r1,L244_LF2
 1117  00001c80  54000000	nop; not filled.
 1118  00001c84  aca20000	sw	(r5),r2
 1119  00001c88          	L244_LF2:
 1120  00001c88  00600035	movi2fp	f0,r3
 1121  00001c8c  00c00835	movi2fp	f1,r6
 1122  00001c90  0401000e	mult	f0,f0,f1
 1123  00001c94  00000834	movfp2i	r1,f0
 1124  00001c98          	L245_LF2:
 1125  00001c98  8fa20000	lw	r2,0(r29)
 1126  00001c9c  8fa30004	lw	r3,4(r29)
 1127  00001ca0  8fa40008	lw	r4,8(r29)
 1128  00001ca4  8fa5000c	lw	r5,12(r29)
 1129  00001ca8  8fa60010	lw	r6,16(r29)
 1130  00001cac  8fdffff8	lw	r31,-8(r30)
 1131  00001cb0  001ee820	add	r29,r0,r30
 1132  00001cb4  8fdefffc	lw	r30,-4(r30)
 1133  00001cb8  4be00000	jr	r31
 1134  00001cbc  54000000	nop
 1135  00001cc0          	.endproc _dstrtol
 1136  00001cc0          	.align 2
 1137  00001cc0          	.proc _bcopy
 1138  00001cc0          	.global _bcopy
 1139  00001cc0          	_bcopy:
 1140                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
 1141  00001cc0  afbefffc	sw	-4(r29),r30; push fp
 1142  00001cc4  001df020	add	r30,r0,r29; fp = sp
 1143  00001cc8  afbffff8	sw	-8(r29),r31; push ret addr
 1144  00001ccc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1145  00001cd0  afa20000	sw	0(r29),r2
 1146  00001cd4  afa30004	sw	4(r29),r3
 1147  00001cd8  afa40008	sw	8(r29),r4
 1148  00001cdc  8fc30000	lw	r3,(r30)
 1149  00001ce0  8fc20004	lw	r2,4(r30)
 1150  00001ce4  8fdf0008	lw	r31,8(r30)
 1151  00001ce8  08000014	j	L259_LF2
 1152  00001cec  54000000	nop; not filled.
 1153  00001cf0          	L257_LF2:
 1154  00001cf0  80640000	lb	r4,(r3)
 1155  00001cf4  a0440000	sb	(r2),r4
 1156  00001cf8  20630001	addi	r3,r3,#1
 1157  00001cfc  20420001	addi	r2,r2,#1
 1158  00001d00          	L259_LF2:
 1159  00001d00  001f0820	add	r1,r0,r31
 1160  00001d04  23ffffff	addi	r31,r31,#-1
 1161  00001d08  6c210000	sgti	r1,r1,#0
 1162  00001d0c  1420ffe0	bnez	r1,L257_LF2
 1163  00001d10  54000000	nop; not filled.
 1164  00001d14  8fa20000	lw	r2,0(r29)
 1165  00001d18  8fa30004	lw	r3,4(r29)
 1166  00001d1c  8fa40008	lw	r4,8(r29)
 1167  00001d20  8fdffff8	lw	r31,-8(r30)
 1168  00001d24  001ee820	add	r29,r0,r30
 1169  00001d28  8fdefffc	lw	r30,-4(r30)
 1170  00001d2c  4be00000	jr	r31
 1171  00001d30  54000000	nop
 1172  00001d34          	.endproc _bcopy
 1173  00001d34          	.align 2
 1174  00001d34          	.proc _bzero
 1175  00001d34          	.global _bzero
 1176  00001d34          	_bzero:
 1177                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
 1178  00001d34  afbefffc	sw	-4(r29),r30; push fp
 1179  00001d38  001df020	add	r30,r0,r29; fp = sp
 1180  00001d3c  afbffff8	sw	-8(r29),r31; push ret addr
 1181  00001d40  2fbd0010	subui	r29,r29,#16; alloc local storage
 1182  00001d44  afa20000	sw	0(r29),r2
 1183  00001d48  afa30004	sw	4(r29),r3
 1184  00001d4c  8fc20000	lw	r2,(r30)
 1185  00001d50  8fdf0004	lw	r31,4(r30)
 1186  00001d54  08000010	j	L270_LF2
 1187  00001d58  54000000	nop; not filled.
 1188  00001d5c          	L268_LF2:
 1189  00001d5c  20030000	addi	r3,r0,(#0x0)&0xff
 1190  00001d60  a0430000	sb	(r2),r3
 1191  00001d64  20420001	addi	r2,r2,#1
 1192  00001d68          	L270_LF2:
 1193  00001d68  001f0820	add	r1,r0,r31
 1194  00001d6c  23ffffff	addi	r31,r31,#-1
 1195  00001d70  6c210000	sgti	r1,r1,#0
 1196  00001d74  1420ffe4	bnez	r1,L268_LF2
 1197  00001d78  54000000	nop; not filled.
 1198  00001d7c  8fa20000	lw	r2,0(r29)
 1199  00001d80  8fa30004	lw	r3,4(r29)
 1200  00001d84  8fdffff8	lw	r31,-8(r30)
 1201  00001d88  001ee820	add	r29,r0,r30
 1202  00001d8c  8fdefffc	lw	r30,-4(r30)
 1203  00001d90  4be00000	jr	r31
 1204  00001d94  54000000	nop
 1205  00001d98          	.endproc _bzero
 1206                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1207                      ;;;
 1208                      ;;; Most of the traps are called in files from libtraps.
 1211  00001d98          	.align 2
 1212  00001d98          	.proc _exit
 1213  00001d98          	.global _exit
 1214  00001d98          	_exit:
 1215  00001d98  44000300	trap	#0x300
 1216  00001d9c  4be00000	jr	r31
 1217  00001da0  54000000	nop
 1218  00001da4          	.endproc _exit
 1220                      ; for the benefit of gcc.
 1221  00001da4          	.proc ___main
 1222  00001da4          	.global ___main
 1223  00001da4          	___main:
 1224  00001da4  4be00000	jr	r31
 1225  00001da8  54000000	nop
 1226  00001dac          	.endproc ___main
 1227  00001dac          	.text
 1228  00001dac          	.global _etext
 1229  00001dac          	_etext:
 1230  00001dac          	.align 3
 1231  00001db0          	.data
 1232  0000206b          	.global _edata
 1233  0000206b          	_edata:
